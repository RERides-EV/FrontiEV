/*  FrontiEV auxillary controls
    Copyright (C) 2025 David Durazzo

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

#define EVAP_VOLTAGE_7_PIN 7

int brklen = 14; // 13 bits + 1 bit for break delimiter
uint8_t sync = 0x55;
uint8_t addr = 0xfb;
uint8_t buf[8] = {0xb3, 0x00, 0x00, 0x90, 0xFF, 0x00, 0x00, 0x00};
uint8_t cksum = 0xb7;
int baud = 19200;
uint16_t brk = (brklen*1000000/baud); // brk in microseconds

void setup() {
pinMode(18, OUTPUT);
pinMode(EVAP_VOLTAGE_7_PIN, INPUT_PULLUP);
Serial.flush();
Serial.begin(baud);
Serial.print(brk);
}

void loop() {

int evap_voltage_7_status = digitalRead(EVAP_VOLTAGE_7_PIN);

while (evap_voltage_7_status == HIGH) {
buf[0] = 0xb3;
buf[1] = 0x0c;
cksum = 0xb3;
} else {
buf[0] = 0xb2;
buf[1] = 0x00;
cksum = 0xc1;
}

pinMode(5, OUTPUT);
digitalWrite(5, HIGH);
digitalWrite(18, LOW);
delayMicroseconds(brk); // For 19,200 Baud, brk should be 677us for brklen of 14us
// or 729us for brklen of 13us.
digitalWrite(18, HIGH);
Serial1.begin(baud);
Serial1.write(sync);
Serial1.write(addr);
Serial1.write(buf[0]);  
Serial1.write(buf[1]);
Serial1.write(buf[2]);
Serial1.write(buf[3]);
Serial1.write(buf[4]);
Serial1.write(buf[5]);
Serial1.write(buf[6]);
Serial1.write(buf[7]);
Serial1.write(cksum);
delay(200);
Serial1.end();
Serial.println(buf[1]);
Serial.println("Evaporator On");
}
buf[0] = 0xb2;
buf[1] = 0x00;
cksum = 0xc1;
Serial1.println("Evaporator Off");
}
